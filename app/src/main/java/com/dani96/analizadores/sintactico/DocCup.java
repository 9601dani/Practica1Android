
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package com.dani96.analizadores.sintactico;

import com.dani96.analizadores.lexico.DocFLex;
import java_cup.runtime.*;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class DocCup extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public DocCup() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public DocCup(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public DocCup(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\273\000\002\002\004\000\002\002\004\000\002\003" +
    "\006\000\002\003\006\000\002\003\004\000\002\004\006" +
    "\000\002\004\006\000\002\004\006\000\002\004\006\000" +
    "\002\004\006\000\002\004\006\000\002\004\006\000\002" +
    "\004\006\000\002\004\006\000\002\004\006\000\002\004" +
    "\006\000\002\004\006\000\002\004\006\000\002\004\006" +
    "\000\002\004\006\000\002\004\006\000\002\004\006\000" +
    "\002\004\006\000\002\004\006\000\002\004\006\000\002" +
    "\004\006\000\002\004\006\000\002\004\006\000\002\004" +
    "\006\000\002\004\004\000\002\006\006\000\002\007\010" +
    "\000\002\012\003\000\002\012\005\000\002\010\010\000" +
    "\002\025\005\000\002\025\003\000\002\016\003\000\002" +
    "\016\006\000\002\016\007\000\002\016\004\000\002\016" +
    "\003\000\002\016\006\000\002\016\007\000\002\016\004" +
    "\000\002\017\004\000\002\017\004\000\002\017\004\000" +
    "\002\017\004\000\002\011\010\000\002\013\005\000\002" +
    "\013\007\000\002\014\005\000\002\015\003\000\002\015" +
    "\006\000\002\015\007\000\002\015\004\000\002\026\004" +
    "\000\002\026\004\000\002\026\004\000\002\026\004\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\005\007\000\002\005\007\000\002\005\007\000\002\005" +
    "\007\000\002\005\007\000\002\005\007\000\002\005\007" +
    "\000\002\005\007\000\002\005\007\000\002\005\007\000" +
    "\002\005\007\000\002\005\007\000\002\005\007\000\002" +
    "\020\007\000\002\020\006\000\002\021\006\000\002\022" +
    "\010\000\002\023\006\000\002\024\010" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u01ff\000\004\004\004\001\002\000\010\003\007\005" +
    "\011\006\012\001\002\000\004\002\006\001\002\000\004" +
    "\002\001\001\002\000\010\003\007\005\011\006\012\001" +
    "\002\000\004\002\000\001\002\000\004\036\u018e\001\002" +
    "\000\004\036\013\001\002\000\014\010\014\013\024\014" +
    "\022\016\023\022\025\001\002\000\004\030\u018b\001\002" +
    "\000\012\010\014\013\024\014\022\016\023\001\002\000" +
    "\012\010\014\013\024\016\023\022\025\001\002\000\012" +
    "\010\014\013\024\014\022\022\025\001\002\000\004\037" +
    "\312\001\002\000\012\013\024\014\022\016\023\022\025" +
    "\001\002\000\004\030\205\001\002\000\004\030\142\001" +
    "\002\000\004\030\132\001\002\000\004\030\127\001\002" +
    "\000\012\010\014\014\022\016\023\022\025\001\002\000" +
    "\010\010\014\016\023\022\025\001\002\000\010\014\022" +
    "\016\023\022\025\001\002\000\010\010\014\014\022\016" +
    "\023\001\002\000\010\010\014\014\022\022\025\001\002" +
    "\000\006\010\014\022\025\001\002\000\006\014\022\022" +
    "\025\001\002\000\006\010\014\014\022\001\002\000\004" +
    "\010\014\001\002\000\004\014\022\001\002\000\004\037" +
    "\uff8a\001\002\000\004\037\uff89\001\002\000\004\022\025" +
    "\001\002\000\004\014\022\001\002\000\004\037\uff8d\001" +
    "\002\000\004\037\uff8e\001\002\000\004\022\025\001\002" +
    "\000\004\010\014\001\002\000\004\037\uff8b\001\002\000" +
    "\004\037\uff8c\001\002\000\006\010\014\016\023\001\002" +
    "\000\006\014\022\016\023\001\002\000\006\010\014\014" +
    "\022\001\002\000\004\010\014\001\002\000\004\014\022" +
    "\001\002\000\004\037\uff80\001\002\000\004\037\uff7f\001" +
    "\002\000\004\016\023\001\002\000\004\014\022\001\002" +
    "\000\004\037\uff82\001\002\000\004\037\uff81\001\002\000" +
    "\004\016\023\001\002\000\004\010\014\001\002\000\004" +
    "\037\uff7d\001\002\000\004\037\uff7e\001\002\000\006\016" +
    "\023\022\025\001\002\000\006\014\022\016\023\001\002" +
    "\000\006\014\022\022\025\001\002\000\004\022\025\001" +
    "\002\000\004\014\022\001\002\000\004\037\uff93\001\002" +
    "\000\004\037\uff94\001\002\000\004\016\023\001\002\000" +
    "\004\014\022\001\002\000\004\037\uff90\001\002\000\004" +
    "\037\uff8f\001\002\000\004\016\023\001\002\000\004\022" +
    "\025\001\002\000\004\037\uff92\001\002\000\004\037\uff91" +
    "\001\002\000\006\016\023\022\025\001\002\000\006\010" +
    "\014\016\023\001\002\000\006\010\014\022\025\001\002" +
    "\000\004\022\025\001\002\000\004\010\014\001\002\000" +
    "\004\037\uff85\001\002\000\004\037\uff86\001\002\000\004" +
    "\016\023\001\002\000\004\010\014\001\002\000\004\037" +
    "\uff83\001\002\000\004\037\uff84\001\002\000\004\016\023" +
    "\001\002\000\004\022\025\001\002\000\004\037\uff88\001" +
    "\002\000\004\037\uff87\001\002\000\004\023\130\001\002" +
    "\000\004\031\131\001\002\000\014\010\uff48\013\uff48\014" +
    "\uff48\016\uff48\037\uff48\001\002\000\004\034\133\001\002" +
    "\000\004\023\135\001\002\000\004\035\140\001\002\000" +
    "\006\007\136\035\uffe1\001\002\000\004\023\135\001\002" +
    "\000\004\035\uffe0\001\002\000\004\031\141\001\002\000" +
    "\014\010\uff49\014\uff49\016\uff49\022\uff49\037\uff49\001\002" +
    "\000\006\017\143\020\144\001\002\000\004\031\146\001" +
    "\002\000\004\031\145\001\002\000\014\010\uff4b\013\uff4b" +
    "\014\uff4b\022\uff4b\037\uff4b\001\002\000\004\021\150\001" +
    "\002\000\014\010\uff4c\013\uff4c\014\uff4c\022\uff4c\037\uff4c" +
    "\001\002\000\004\030\151\001\002\000\010\032\154\040" +
    "\155\041\152\001\002\000\022\007\uffd8\024\162\025\161" +
    "\026\157\027\160\031\uffd8\033\uffd8\035\uffd8\001\002\000" +
    "\004\031\203\001\002\000\006\040\170\041\167\001\002" +
    "\000\022\007\uffdc\024\162\025\161\026\157\027\160\031" +
    "\uffdc\033\uffdc\035\uffdc\001\002\000\012\007\uffd9\031\uffd9" +
    "\033\uffd9\035\uffd9\001\002\000\010\032\154\040\155\041" +
    "\152\001\002\000\010\032\154\040\155\041\152\001\002" +
    "\000\010\032\154\040\155\041\152\001\002\000\010\032" +
    "\154\040\155\041\152\001\002\000\012\007\uffd4\031\uffd4" +
    "\033\uffd4\035\uffd4\001\002\000\012\007\uffd3\031\uffd3\033" +
    "\uffd3\035\uffd3\001\002\000\012\007\uffd1\031\uffd1\033\uffd1" +
    "\035\uffd1\001\002\000\012\007\uffd2\031\uffd2\033\uffd2\035" +
    "\uffd2\001\002\000\014\024\162\025\161\026\157\027\160" +
    "\033\177\001\002\000\014\024\162\025\161\026\157\027" +
    "\160\033\172\001\002\000\004\033\174\001\002\000\012" +
    "\024\162\025\161\026\157\027\160\001\002\000\012\007" +
    "\uffdb\031\uffdb\033\uffdb\035\uffdb\001\002\000\012\024\162" +
    "\025\161\026\157\027\160\001\002\000\012\007\uffda\031" +
    "\uffda\033\uffda\035\uffda\001\002\000\004\033\201\001\002" +
    "\000\012\024\162\025\161\026\157\027\160\001\002\000" +
    "\012\007\uffd7\031\uffd7\033\uffd7\035\uffd7\001\002\000\012" +
    "\024\162\025\161\026\157\027\160\001\002\000\012\007" +
    "\uffd6\031\uffd6\033\uffd6\035\uffd6\001\002\000\014\010\uff4a" +
    "\013\uff4a\014\uff4a\022\uff4a\037\uff4a\001\002\000\012\007" +
    "\uffd5\031\uffd5\033\uffd5\035\uffd5\001\002\000\004\034\206" +
    "\001\002\000\010\032\154\040\155\041\152\001\002\000" +
    "\004\035\210\001\002\000\004\031\211\001\002\000\014" +
    "\010\uff47\013\uff47\016\uff47\022\uff47\037\uff47\001\002\000" +
    "\010\013\024\016\023\022\025\001\002\000\010\013\024" +
    "\014\022\016\023\001\002\000\010\014\022\016\023\022" +
    "\025\001\002\000\010\013\024\014\022\022\025\001\002" +
    "\000\006\013\024\022\025\001\002\000\006\013\024\014" +
    "\022\001\002\000\006\014\022\022\025\001\002\000\004" +
    "\022\025\001\002\000\004\014\022\001\002\000\004\037" +
    "\uffc3\001\002\000\004\037\uffc4\001\002\000\004\013\024" +
    "\001\002\000\004\014\022\001\002\000\004\037\uffc0\001" +
    "\002\000\004\037\uffbf\001\002\000\004\013\024\001\002" +
    "\000\004\022\025\001\002\000\004\037\uffc2\001\002\000" +
    "\004\037\uffc1\001\002\000\006\016\023\022\025\001\002" +
    "\000\006\014\022\016\023\001\002\000\006\014\022\022" +
    "\025\001\002\000\004\022\025\001\002\000\004\014\022" +
    "\001\002\000\004\037\uffbd\001\002\000\004\037\uffbe\001" +
    "\002\000\004\016\023\001\002\000\004\014\022\001\002" +
    "\000\004\037\uffba\001\002\000\004\037\uffb9\001\002\000" +
    "\004\016\023\001\002\000\004\022\025\001\002\000\004" +
    "\037\uffbc\001\002\000\004\037\uffbb\001\002\000\006\013" +
    "\024\016\023\001\002\000\006\014\022\016\023\001\002" +
    "\000\006\013\024\014\022\001\002\000\004\013\024\001" +
    "\002\000\004\014\022\001\002\000\004\037\uffb2\001\002" +
    "\000\004\037\uffb1\001\002\000\004\016\023\001\002\000" +
    "\004\014\022\001\002\000\004\037\uffb0\001\002\000\004" +
    "\037\uffaf\001\002\000\004\016\023\001\002\000\004\013" +
    "\024\001\002\000\004\037\uffae\001\002\000\004\037\uffad" +
    "\001\002\000\006\013\024\016\023\001\002\000\006\016" +
    "\023\022\025\001\002\000\006\013\024\022\025\001\002" +
    "\000\004\013\024\001\002\000\004\022\025\001\002\000" +
    "\004\037\uffb8\001\002\000\004\037\uffb7\001\002\000\004" +
    "\016\023\001\002\000\004\022\025\001\002\000\004\037" +
    "\uffb6\001\002\000\004\037\uffb5\001\002\000\004\016\023" +
    "\001\002\000\004\013\024\001\002\000\004\037\uffb4\001" +
    "\002\000\004\037\uffb3\001\002\000\004\002\ufffe\001\002" +
    "\000\010\010\014\013\024\022\025\001\002\000\010\013" +
    "\024\014\022\022\025\001\002\000\010\010\014\013\024" +
    "\014\022\001\002\000\010\010\014\014\022\022\025\001" +
    "\002\000\006\010\014\022\025\001\002\000\006\014\022" +
    "\022\025\001\002\000\006\010\014\014\022\001\002\000" +
    "\004\010\014\001\002\000\004\014\022\001\002\000\004" +
    "\037\uffa2\001\002\000\004\037\uffa1\001\002\000\004\022" +
    "\025\001\002\000\004\014\022\001\002\000\004\037\uffa5" +
    "\001\002\000\004\037\uffa6\001\002\000\004\022\025\001" +
    "\002\000\004\010\014\001\002\000\004\037\uffa3\001\002" +
    "\000\004\037\uffa4\001\002\000\006\010\014\013\024\001" +
    "\002\000\006\013\024\014\022\001\002\000\006\010\014" +
    "\014\022\001\002\000\004\010\014\001\002\000\004\014" +
    "\022\001\002\000\004\037\uff98\001\002\000\004\037\uff97" +
    "\001\002\000\004\013\024\001\002\000\004\014\022\001" +
    "\002\000\004\037\uff9a\001\002\000\004\037\uff99\001\002" +
    "\000\004\013\024\001\002\000\004\010\014\001\002\000" +
    "\004\037\uff95\001\002\000\004\037\uff96\001\002\000\006" +
    "\013\024\022\025\001\002\000\006\013\024\014\022\001" +
    "\002\000\006\014\022\022\025\001\002\000\004\022\025" +
    "\001\002\000\004\014\022\001\002\000\004\037\uffab\001" +
    "\002\000\004\037\uffac\001\002\000\004\013\024\001\002" +
    "\000\004\014\022\001\002\000\004\037\uffa8\001\002\000" +
    "\004\037\uffa7\001\002\000\004\013\024\001\002\000\004" +
    "\022\025\001\002\000\004\037\uffaa\001\002\000\004\037" +
    "\uffa9\001\002\000\006\013\024\022\025\001\002\000\006" +
    "\010\014\013\024\001\002\000\006\010\014\022\025\001" +
    "\002\000\004\022\025\001\002\000\004\010\014\001\002" +
    "\000\004\037\uff9d\001\002\000\004\037\uff9e\001\002\000" +
    "\004\013\024\001\002\000\004\010\014\001\002\000\004" +
    "\037\uff9b\001\002\000\004\037\uff9c\001\002\000\004\013" +
    "\024\001\002\000\004\022\025\001\002\000\004\037\uffa0" +
    "\001\002\000\004\037\uff9f\001\002\000\010\013\024\016" +
    "\023\022\025\001\002\000\010\010\014\013\024\016\023" +
    "\001\002\000\010\010\014\016\023\022\025\001\002\000" +
    "\010\010\014\013\024\022\025\001\002\000\006\013\024" +
    "\022\025\001\002\000\006\010\014\013\024\001\002\000" +
    "\006\010\014\022\025\001\002\000\004\022\025\001\002" +
    "\000\004\010\014\001\002\000\004\037\uff73\001\002\000" +
    "\004\037\uff74\001\002\000\004\013\024\001\002\000\004" +
    "\010\014\001\002\000\004\037\uff71\001\002\000\004\037" +
    "\uff72\001\002\000\004\013\024\001\002\000\004\022\025" +
    "\001\002\000\004\037\uff76\001\002\000\004\037\uff75\001" +
    "\002\000\006\016\023\022\025\001\002\000\006\010\014" +
    "\016\023\001\002\000\006\010\014\022\025\001\002\000" +
    "\004\022\025\001\002\000\004\010\014\001\002\000\004" +
    "\037\uff6d\001\002\000\004\037\uff6e\001\002\000\004\016" +
    "\023\001\002\000\004\010\014\001\002\000\004\037\uff6b" +
    "\001\002\000\004\037\uff6c\001\002\000\004\016\023\001" +
    "\002\000\004\022\025\001\002\000\004\037\uff70\001\002" +
    "\000\004\037\uff6f\001\002\000\006\013\024\016\023\001" +
    "\002\000\006\010\014\016\023\001\002\000\006\010\014" +
    "\013\024\001\002\000\004\013\024\001\002\000\004\010" +
    "\014\001\002\000\004\037\uff67\001\002\000\004\037\uff68" +
    "\001\002\000\004\016\023\001\002\000\004\010\014\001" +
    "\002\000\004\037\uff65\001\002\000\004\037\uff66\001\002" +
    "\000\004\016\023\001\002\000\004\013\024\001\002\000" +
    "\004\037\uff6a\001\002\000\004\037\uff69\001\002\000\006" +
    "\013\024\016\023\001\002\000\006\016\023\022\025\001" +
    "\002\000\006\013\024\022\025\001\002\000\004\013\024" +
    "\001\002\000\004\022\025\001\002\000\004\037\uff7c\001" +
    "\002\000\004\037\uff7b\001\002\000\004\016\023\001\002" +
    "\000\004\022\025\001\002\000\004\037\uff7a\001\002\000" +
    "\004\037\uff79\001\002\000\004\016\023\001\002\000\004" +
    "\013\024\001\002\000\004\037\uff78\001\002\000\004\037" +
    "\uff77\001\002\000\010\010\014\013\024\016\023\001\002" +
    "\000\010\013\024\014\022\016\023\001\002\000\010\010" +
    "\014\014\022\016\023\001\002\000\010\010\014\013\024" +
    "\014\022\001\002\000\006\010\014\013\024\001\002\000" +
    "\006\013\024\014\022\001\002\000\006\010\014\014\022" +
    "\001\002\000\004\010\014\001\002\000\004\014\022\001" +
    "\002\000\004\037\uff5c\001\002\000\004\037\uff5b\001\002" +
    "\000\004\013\024\001\002\000\004\014\022\001\002\000" +
    "\004\037\uff5e\001\002\000\004\037\uff5d\001\002\000\004" +
    "\013\024\001\002\000\004\010\014\001\002\000\004\037" +
    "\uff59\001\002\000\004\037\uff5a\001\002\000\006\010\014" +
    "\016\023\001\002\000\006\014\022\016\023\001\002\000" +
    "\006\010\014\014\022\001\002\000\004\010\014\001\002" +
    "\000\004\014\022\001\002\000\004\037\uff56\001\002\000" +
    "\004\037\uff55\001\002\000\004\016\023\001\002\000\004" +
    "\014\022\001\002\000\004\037\uff58\001\002\000\004\037" +
    "\uff57\001\002\000\004\016\023\001\002\000\004\010\014" +
    "\001\002\000\004\037\uff53\001\002\000\004\037\uff54\001" +
    "\002\000\006\013\024\016\023\001\002\000\006\014\022" +
    "\016\023\001\002\000\006\013\024\014\022\001\002\000" +
    "\004\013\024\001\002\000\004\014\022\001\002\000\004" +
    "\037\uff64\001\002\000\004\037\uff63\001\002\000\004\016" +
    "\023\001\002\000\004\014\022\001\002\000\004\037\uff62" +
    "\001\002\000\004\037\uff61\001\002\000\004\016\023\001" +
    "\002\000\004\013\024\001\002\000\004\037\uff60\001\002" +
    "\000\004\037\uff5f\001\002\000\006\013\024\016\023\001" +
    "\002\000\006\010\014\016\023\001\002\000\006\010\014" +
    "\013\024\001\002\000\004\013\024\001\002\000\004\010" +
    "\014\001\002\000\004\037\uff4f\001\002\000\004\037\uff50" +
    "\001\002\000\004\016\023\001\002\000\004\010\014\001" +
    "\002\000\004\037\uff4d\001\002\000\004\037\uff4e\001\002" +
    "\000\004\016\023\001\002\000\004\013\024\001\002\000" +
    "\004\037\uff52\001\002\000\004\037\uff51\001\002\000\004" +
    "\023\u018c\001\002\000\004\031\u018d\001\002\000\022\011" +
    "\uffe3\012\uffe3\013\uffe3\014\uffe3\015\uffe3\016\uffe3\022\uffe3" +
    "\037\uffe3\001\002\000\014\003\u0196\010\014\011\u0193\012" +
    "\u0192\015\u0197\001\002\000\010\010\014\011\u0193\015\u0197" +
    "\001\002\000\010\010\014\012\u0192\015\u0197\001\002\000" +
    "\004\037\u01e2\001\002\000\004\030\u01da\001\002\000\004" +
    "\030\u01d5\001\002\000\010\010\014\011\u0193\012\u0192\001" +
    "\002\000\010\011\u0193\012\u0192\015\u0197\001\002\000\014" +
    "\003\u0196\010\014\011\u0193\012\u0192\015\u0197\001\002\000" +
    "\004\030\u0198\001\002\000\004\034\u0199\001\002\000\004" +
    "\036\u019b\001\002\000\004\035\u01b4\001\002\000\006\032" +
    "\u019e\040\u019f\001\002\000\004\007\u01b2\001\002\000\004" +
    "\037\u01af\001\002\000\004\040\u01a9\001\002\000\020\007" +
    "\uffcc\024\u01a4\025\u01a3\026\u01a0\027\u01a2\033\uffcc\037\uffcc" +
    "\001\002\000\006\032\u019e\040\u019f\001\002\000\010\007" +
    "\uffc9\033\uffc9\037\uffc9\001\002\000\006\032\u019e\040\u019f" +
    "\001\002\000\006\032\u019e\040\u019f\001\002\000\006\032" +
    "\u019e\040\u019f\001\002\000\010\007\uffc8\033\uffc8\037\uffc8" +
    "\001\002\000\010\007\uffc7\033\uffc7\037\uffc7\001\002\000" +
    "\010\007\uffc5\033\uffc5\037\uffc5\001\002\000\010\007\uffc6" +
    "\033\uffc6\037\uffc6\001\002\000\014\024\u01a4\025\u01a3\026" +
    "\u01a0\027\u01a2\033\u01ab\001\002\000\004\033\u01ad\001\002" +
    "\000\012\024\u01a4\025\u01a3\026\u01a0\027\u01a2\001\002\000" +
    "\010\007\uffcb\033\uffcb\037\uffcb\001\002\000\012\024\u01a4" +
    "\025\u01a3\026\u01a0\027\u01a2\001\002\000\010\007\uffca\033" +
    "\uffca\037\uffca\001\002\000\006\007\u01b0\035\uffcf\001\002" +
    "\000\004\036\u019b\001\002\000\004\035\uffce\001\002\000" +
    "\006\032\u019e\040\u019f\001\002\000\004\037\uffcd\001\002" +
    "\000\004\031\u01b5\001\002\000\012\010\uffd0\011\uffd0\012" +
    "\uffd0\037\uffd0\001\002\000\004\037\uffe4\001\002\000\006" +
    "\011\u0193\012\u0192\001\002\000\006\011\u0193\015\u0197\001" +
    "\002\000\006\012\u0192\015\u0197\001\002\000\004\012\u0192" +
    "\001\002\000\004\015\u0197\001\002\000\004\037\ufffc\001" +
    "\002\000\004\037\ufffb\001\002\000\004\011\u0193\001\002" +
    "\000\004\015\u0197\001\002\000\004\037\ufffa\001\002\000" +
    "\004\037\ufff9\001\002\000\004\011\u0193\001\002\000\004" +
    "\012\u0192\001\002\000\004\037\ufff8\001\002\000\004\037" +
    "\ufff7\001\002\000\006\011\u0193\012\u0192\001\002\000\006" +
    "\010\014\011\u0193\001\002\000\006\010\014\012\u0192\001" +
    "\002\000\004\012\u0192\001\002\000\004\010\014\001\002" +
    "\000\004\037\uffe7\001\002\000\004\037\uffe8\001\002\000" +
    "\004\011\u0193\001\002\000\004\010\014\001\002\000\004" +
    "\037\uffe5\001\002\000\004\037\uffe6\001\002\000\004\011" +
    "\u0193\001\002\000\004\012\u0192\001\002\000\004\037\uffea" +
    "\001\002\000\004\037\uffe9\001\002\000\004\034\u01d6\001" +
    "\002\000\004\023\135\001\002\000\004\035\u01d8\001\002" +
    "\000\004\031\u01d9\001\002\000\012\010\uffe2\012\uffe2\015" +
    "\uffe2\037\uffe2\001\002\000\004\034\u01db\001\002\000\010" +
    "\032\154\040\155\041\152\001\002\000\004\035\u01e0\001" +
    "\002\000\006\007\u01de\035\uffdd\001\002\000\010\032\154" +
    "\040\155\041\152\001\002\000\004\035\uffde\001\002\000" +
    "\004\031\u01e1\001\002\000\012\010\uffdf\011\uffdf\015\uffdf" +
    "\037\uffdf\001\002\000\004\002\uffff\001\002\000\006\010" +
    "\014\012\u0192\001\002\000\006\012\u0192\015\u0197\001\002" +
    "\000\006\010\014\015\u0197\001\002\000\004\010\014\001" +
    "\002\000\004\015\u0197\001\002\000\004\037\ufff4\001\002" +
    "\000\004\037\ufff3\001\002\000\004\012\u0192\001\002\000" +
    "\004\015\u0197\001\002\000\004\037\ufff6\001\002\000\004" +
    "\037\ufff5\001\002\000\004\012\u0192\001\002\000\004\010" +
    "\014\001\002\000\004\037\ufff1\001\002\000\004\037\ufff2" +
    "\001\002\000\006\010\014\011\u0193\001\002\000\006\011" +
    "\u0193\015\u0197\001\002\000\006\010\014\015\u0197\001\002" +
    "\000\004\010\014\001\002\000\004\015\u0197\001\002\000" +
    "\004\037\uffee\001\002\000\004\037\uffed\001\002\000\004" +
    "\011\u0193\001\002\000\004\015\u0197\001\002\000\004\037" +
    "\ufff0\001\002\000\004\037\uffef\001\002\000\004\011\u0193" +
    "\001\002\000\004\010\014\001\002\000\004\037\uffeb\001" +
    "\002\000\004\037\uffec\001\002\000\004\002\ufffd\001\002" +
    "" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u01ff\000\004\002\004\001\001\000\004\003\007\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\003\u0200" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\016\005\017\006\020\020\016\022\025\023\014" +
    "\024\015\001\001\000\002\001\001\000\012\006\u014b\020" +
    "\u014d\022\u014c\024\u014a\001\001\000\012\006\u010a\020\u010d" +
    "\022\u010c\023\u010b\001\001\000\012\006\313\022\315\023" +
    "\314\024\312\001\001\000\002\001\001\000\012\020\214" +
    "\022\213\023\212\024\211\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\006\027\020\031\023\030\024\026\001\001\000\010\006" +
    "\107\020\111\023\110\001\001\000\010\020\072\023\071" +
    "\024\070\001\001\000\010\006\052\020\053\024\051\001" +
    "\001\000\010\006\033\023\034\024\032\001\001\000\006" +
    "\006\045\023\046\001\001\000\006\023\042\024\041\001" +
    "\001\000\006\006\036\024\035\001\001\000\004\006\040" +
    "\001\001\000\004\024\037\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\044\001\001\000\004\024\043" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\023" +
    "\050\001\001\000\004\006\047\001\001\000\002\001\001" +
    "\000\002\001\001\000\006\006\064\020\065\001\001\000" +
    "\006\020\061\024\060\001\001\000\006\006\055\024\054" +
    "\001\001\000\004\006\057\001\001\000\004\024\056\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\020\063" +
    "\001\001\000\004\024\062\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\020\067\001\001\000\004\006\066" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\020" +
    "\104\023\103\001\001\000\006\020\100\024\077\001\001" +
    "\000\006\023\074\024\073\001\001\000\004\023\076\001" +
    "\001\000\004\024\075\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\020\102\001\001\000\004\024\101\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\020\106" +
    "\001\001\000\004\023\105\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\020\123\023\122\001\001\000\006" +
    "\006\116\020\117\001\001\000\006\006\112\023\113\001" +
    "\001\000\004\023\115\001\001\000\004\006\114\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\020\121\001" +
    "\001\000\004\006\120\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\020\125\001\001\000\004\023\124\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\012\133\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\012\136\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\021\146\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\016\152" +
    "\001\001\000\004\017\203\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\155\001\001\000\002\001\001" +
    "\000\004\016\165\001\001\000\004\016\164\001\001\000" +
    "\004\016\163\001\001\000\004\016\162\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\017\175\001\001\000\004\017\170\001\001" +
    "\000\002\001\001\000\004\017\172\001\001\000\002\001" +
    "\001\000\004\017\174\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\017\177\001\001\000\002\001\001\000" +
    "\004\017\201\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\016\206\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\020\274\022\273\023\272\001\001\000\010\020" +
    "\255\022\254\024\253\001\001\000\010\020\236\023\235" +
    "\024\234\001\001\000\010\022\217\023\216\024\215\001" +
    "\001\000\006\022\231\023\230\001\001\000\006\022\225" +
    "\024\224\001\001\000\006\023\221\024\220\001\001\000" +
    "\004\023\223\001\001\000\004\024\222\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\022\227\001\001\000" +
    "\004\024\226\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\022\233\001\001\000\004\023\232\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\020\250\023\247" +
    "\001\001\000\006\020\244\024\243\001\001\000\006\023" +
    "\240\024\237\001\001\000\004\023\242\001\001\000\004" +
    "\024\241\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\020\246\001\001\000\004\024\245\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\252\001\001\000" +
    "\004\023\251\001\001\000\002\001\001\000\002\001\001" +
    "\000\006\020\267\022\266\001\001\000\006\020\263\024" +
    "\262\001\001\000\006\022\257\024\256\001\001\000\004" +
    "\022\261\001\001\000\004\024\260\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\020\265\001\001\000\004" +
    "\024\264\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\020\271\001\001\000\004\022\270\001\001\000\002" +
    "\001\001\000\002\001\001\000\006\020\306\022\305\001" +
    "\001\000\006\020\302\023\301\001\001\000\006\022\276" +
    "\023\275\001\001\000\004\022\300\001\001\000\004\023" +
    "\277\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\020\304\001\001\000\004\023\303\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\020\310\001\001\000\004" +
    "\022\307\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\006\373\022\375\023\374\001\001" +
    "\000\010\022\356\023\355\024\354\001\001\000\010\006" +
    "\336\022\337\024\335\001\001\000\010\006\317\023\320" +
    "\024\316\001\001\000\006\006\331\023\332\001\001\000" +
    "\006\023\326\024\325\001\001\000\006\006\322\024\321" +
    "\001\001\000\004\006\324\001\001\000\004\024\323\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\330" +
    "\001\001\000\004\024\327\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\023\334\001\001\000\004\006\333" +
    "\001\001\000\002\001\001\000\002\001\001\000\006\006" +
    "\350\022\351\001\001\000\006\022\345\024\344\001\001" +
    "\000\006\006\341\024\340\001\001\000\004\006\343\001" +
    "\001\000\004\024\342\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\022\347\001\001\000\004\024\346\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\022\353" +
    "\001\001\000\004\006\352\001\001\000\002\001\001\000" +
    "\002\001\001\000\006\022\370\023\367\001\001\000\006" +
    "\022\364\024\363\001\001\000\006\023\360\024\357\001" +
    "\001\000\004\023\362\001\001\000\004\024\361\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\366\001" +
    "\001\000\004\024\365\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\022\372\001\001\000\004\023\371\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\022\u0107" +
    "\023\u0106\001\001\000\006\006\u0102\022\u0103\001\001\000" +
    "\006\006\376\023\377\001\001\000\004\023\u0101\001\001" +
    "\000\004\006\u0100\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\022\u0105\001\001\000\004\006\u0104\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\u0109\001" +
    "\001\000\004\023\u0108\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\020\u013d\022\u013c\023\u013b\001\001\000" +
    "\010\006\u012c\020\u012e\022\u012d\001\001\000\010\006\u011d" +
    "\020\u011f\023\u011e\001\001\000\010\006\u010e\022\u0110\023" +
    "\u010f\001\001\000\006\022\u011a\023\u0119\001\001\000\006" +
    "\006\u0115\022\u0116\001\001\000\006\006\u0111\023\u0112\001" +
    "\001\000\004\023\u0114\001\001\000\004\006\u0113\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\022\u0118\001" +
    "\001\000\004\006\u0117\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\022\u011c\001\001\000\004\023\u011b\001" +
    "\001\000\002\001\001\000\002\001\001\000\006\020\u0129" +
    "\023\u0128\001\001\000\006\006\u0124\020\u0125\001\001\000" +
    "\006\006\u0120\023\u0121\001\001\000\004\023\u0123\001\001" +
    "\000\004\006\u0122\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\020\u0127\001\001\000\004\006\u0126\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\020\u012b\001" +
    "\001\000\004\023\u012a\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\020\u0138\022\u0137\001\001\000\006\006" +
    "\u0133\020\u0134\001\001\000\006\006\u012f\022\u0130\001\001" +
    "\000\004\022\u0132\001\001\000\004\006\u0131\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\020\u0136\001\001" +
    "\000\004\006\u0135\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\020\u013a\001\001\000\004\022\u0139\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\020\u0147\022" +
    "\u0146\001\001\000\006\020\u0143\023\u0142\001\001\000\006" +
    "\022\u013f\023\u013e\001\001\000\004\022\u0141\001\001\000" +
    "\004\023\u0140\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\020\u0145\001\001\000\004\023\u0144\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\020\u0149\001\001" +
    "\000\004\022\u0148\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\006\u017b\020\u017d\022\u017c\001\001\000\010" +
    "\020\u016e\022\u016d\024\u016c\001\001\000\010\006\u015e\020" +
    "\u015f\024\u015d\001\001\000\010\006\u014f\022\u0150\024\u014e" +
    "\001\001\000\006\006\u0159\022\u015a\001\001\000\006\022" +
    "\u0156\024\u0155\001\001\000\006\006\u0152\024\u0151\001\001" +
    "\000\004\006\u0154\001\001\000\004\024\u0153\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\022\u0158\001\001" +
    "\000\004\024\u0157\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\022\u015c\001\001\000\004\006\u015b\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\006\u0168\020" +
    "\u0169\001\001\000\006\020\u0165\024\u0164\001\001\000\006" +
    "\006\u0161\024\u0160\001\001\000\004\006\u0163\001\001\000" +
    "\004\024\u0162\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\020\u0167\001\001\000\004\024\u0166\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\020\u016b\001\001" +
    "\000\004\006\u016a\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\020\u0178\022\u0177\001\001\000\006\020\u0174" +
    "\024\u0173\001\001\000\006\022\u0170\024\u016f\001\001\000" +
    "\004\022\u0172\001\001\000\004\024\u0171\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\u0176\001\001\000" +
    "\004\024\u0175\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\020\u017a\001\001\000\004\022\u0179\001\001\000" +
    "\002\001\001\000\002\001\001\000\006\020\u0187\022\u0186" +
    "\001\001\000\006\006\u0182\020\u0183\001\001\000\006\006" +
    "\u017e\022\u017f\001\001\000\004\022\u0181\001\001\000\004" +
    "\006\u0180\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\020\u0185\001\001\000\004\006\u0184\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\020\u0189\001\001\000" +
    "\004\022\u0188\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\014\004\u0190\006\u0194\007\u018f\010\u018e\011\u0193\001\001" +
    "\000\010\006\u01f2\007\u01f3\011\u01f1\001\001\000\010\006" +
    "\u01e3\010\u01e4\011\u01e2\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\006\u01c5\007\u01c7\010" +
    "\u01c6\001\001\000\010\007\u01b8\010\u01b7\011\u01b6\001\001" +
    "\000\014\004\u01b5\006\u0194\007\u018f\010\u018e\011\u0193\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\013\u0199" +
    "\001\001\000\002\001\001\000\006\014\u019c\015\u019b\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\026\u01a0\001\001\000\004\015\u01a7\001\001\000" +
    "\002\001\001\000\004\015\u01a6\001\001\000\004\015\u01a5" +
    "\001\001\000\004\015\u01a4\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\026\u01a9\001\001\000\002\001\001\000\004\026\u01ab\001" +
    "\001\000\002\001\001\000\004\026\u01ad\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\013\u01b0\001\001\000" +
    "\002\001\001\000\004\015\u01b2\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\007\u01c2\010\u01c1\001\001\000\006\007\u01be\011\u01bd" +
    "\001\001\000\006\010\u01ba\011\u01b9\001\001\000\004\010" +
    "\u01bc\001\001\000\004\011\u01bb\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\007\u01c0\001\001\000\004\011" +
    "\u01bf\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\007\u01c4\001\001\000\004\010\u01c3\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\007\u01d1\010\u01d0\001\001" +
    "\000\006\006\u01cc\007\u01cd\001\001\000\006\006\u01c8\010" +
    "\u01c9\001\001\000\004\010\u01cb\001\001\000\004\006\u01ca" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\007" +
    "\u01cf\001\001\000\004\006\u01ce\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\007\u01d3\001\001\000\004\010" +
    "\u01d2\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\012\u01d6\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\006" +
    "\016\u01dc\025\u01db\001\001\000\002\001\001\000\002\001" +
    "\001\000\006\016\u01dc\025\u01de\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\u01ed\010\u01ee\001\001\000\006\010\u01ea\011\u01e9" +
    "\001\001\000\006\006\u01e6\011\u01e5\001\001\000\004\006" +
    "\u01e8\001\001\000\004\011\u01e7\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\010\u01ec\001\001\000\004\011" +
    "\u01eb\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\010\u01f0\001\001\000\004\006\u01ef\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\006\u01fc\007\u01fd\001\001" +
    "\000\006\007\u01f9\011\u01f8\001\001\000\006\006\u01f5\011" +
    "\u01f4\001\001\000\004\006\u01f7\001\001\000\004\011\u01f6" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\007" +
    "\u01fb\001\001\000\004\011\u01fa\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\007\u01ff\001\001\000\004\006" +
    "\u01fe\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$DocCup$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$DocCup$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$DocCup$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}




    public DocCup(DocFLex lexer) {
        super(lexer);
    }

    public void report_error(String message, Object info) {
        System.out.println("public void report_error");
    }

    public void report_fatal_error(String message, Object info) {
        System.out.println("public void report_fatal_error");
    }

    public void syntax_error(Symbol cur_token) {
        System.out.println("El error es el simbolo: " + sym.terminalNames[cur_token.sym]);
        System.out.println(String.format("En la posicion: %d, %d", cur_token.left, cur_token.right));
    }

    public void unrecovered_syntax_error(Symbol cur_token) {
        if (cur_token.sym == sym.EOF) {
            System.out.println("public void unrecoveredsyntax_error");
        }
    }

    int def = 0;
    public void incrementarDef(){
        def++;
        System.out.println(def);
    }



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$DocCup$actions {
  private final DocCup parser;

  /** Constructor */
  CUP$DocCup$actions(DocCup parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$DocCup$do_action_part00000000(
    int                        CUP$DocCup$act_num,
    java_cup.runtime.lr_parser CUP$DocCup$parser,
    java.util.Stack            CUP$DocCup$stack,
    int                        CUP$DocCup$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$DocCup$result;

      /* select the action based on the action number */
      switch (CUP$DocCup$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= D EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)).value;
		RESULT = start_val;
              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$DocCup$parser.done_parsing();
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // D ::= DEF G 
            {
              Object RESULT =null;
		incrementarDef();
              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("D",0, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // G ::= BARRAS LLAVE_ABIERTA BA LLAVE_CERRADA 
            {
              Object RESULT =null;
		System.out.println("PROBANDO BARRAS CON LLAVES");
              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("G",1, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // G ::= PIE LLAVE_ABIERTA PA LLAVE_CERRADA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("G",1, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // G ::= error G 
            {
              Object RESULT =null;
		System.out.println("ERROR EN G");
              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("G",1, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // BA ::= T X Y U 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // BA ::= T X U Y 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // BA ::= T Y X U 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // BA ::= T Y U X 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // BA ::= T U X Y 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // BA ::= T U Y X 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // BA ::= X T Y U 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // BA ::= X T U Y 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // BA ::= X Y T U 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // BA ::= X Y U T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // BA ::= X U T Y 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // BA ::= X U Y T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // BA ::= Y T X U 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // BA ::= Y T U X 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // BA ::= Y X T U 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // BA ::= Y X U T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // BA ::= Y U T X 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // BA ::= Y U X T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // BA ::= U T X Y 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // BA ::= U T Y X 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // BA ::= U X T Y 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // BA ::= U X Y T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // BA ::= U Y T X 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // BA ::= U Y X T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // BA ::= error BA 
            {
              Object RESULT =null;
		System.out.println("ERROR EN BA");
              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("BA",2, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // T ::= TITULO DOS_PUNTOS CADENA PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("T",4, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // X ::= EJEX DOS_PUNTOS CORCHETE_ABIERTO C CORCHETE_CERRADO PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("X",5, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-5)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // C ::= CADENA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("C",8, ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // C ::= CADENA COMA C 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("C",8, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-2)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Y ::= EJEY DOS_PUNTOS CORCHETE_ABIERTO LN CORCHETE_CERRADO PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("Y",6, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-5)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // LN ::= N COMA LN 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("LN",19, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-2)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // LN ::= N 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("LN",19, ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // N ::= ENTERO 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("N",12, ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // N ::= PARENTESIS_ABIERTO ENTERO PARENTESIS_CERRADO S 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("N",12, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // N ::= PARENTESIS_ABIERTO ENTERO S PARENTESIS_CERRADO S 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("N",12, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // N ::= ENTERO S 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("N",12, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // N ::= DECIMAL 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("N",12, ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // N ::= PARENTESIS_ABIERTO DECIMAL PARENTESIS_CERRADO S 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("N",12, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // N ::= PARENTESIS_ABIERTO DECIMAL S PARENTESIS_CERRADO S 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("N",12, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // N ::= DECIMAL S 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("N",12, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // S ::= SIGNO_MAS N 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("S",13, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // S ::= SIGNO_MENOS N 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("S",13, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // S ::= SIGNO_POR N 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("S",13, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // S ::= SIGNO_DIVISION N 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("S",13, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // U ::= UNIR DOS_PUNTOS CORCHETE_ABIERTO TUP CORCHETE_CERRADO PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("U",7, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-5)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // TUP ::= LLAVE_ABIERTA VAL LLAVE_CERRADA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("TUP",9, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-2)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // TUP ::= LLAVE_ABIERTA VAL LLAVE_CERRADA COMA TUP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("TUP",9, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // VAL ::= ENT COMA ENT 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("VAL",10, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-2)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // ENT ::= ENTERO 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("ENT",11, ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // ENT ::= PARENTESIS_ABIERTO ENTERO PARENTESIS_CERRADO SE 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("ENT",11, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // ENT ::= PARENTESIS_ABIERTO ENTERO SE PARENTESIS_CERRADO SE 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("ENT",11, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // ENT ::= ENTERO SE 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("ENT",11, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // SE ::= SIGNO_MAS ENT 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("SE",20, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // SE ::= SIGNO_MENOS ENT 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("SE",20, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // SE ::= SIGNO_POR ENT 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("SE",20, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // SE ::= SIGNO_DIVISION ENT 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("SE",20, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-1)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // PA ::= T TP E V EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // PA ::= T TP E EX V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // PA ::= T TP V E EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // PA ::= T TP V EX E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // PA ::= T TP EX E V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // PA ::= T TP EX V E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // PA ::= T E TP V EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // PA ::= T E TP EX V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // PA ::= T E V TP EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // PA ::= T E V EX TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // PA ::= T E EX TP V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // PA ::= T E EX V TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // PA ::= T V TP E EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // PA ::= T V TP EX E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // PA ::= T V E TP EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // PA ::= T V E EX TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // PA ::= T V EX TP E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // PA ::= T V EX E TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // PA ::= T EX TP E V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // PA ::= T EX TP V E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // PA ::= T EX E TP V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // PA ::= T EX E V TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // PA ::= T EX V TP E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // PA ::= T EX V E TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // PA ::= TP T E V EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // PA ::= TP T E EX V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // PA ::= TP T V E EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // PA ::= TP T V EX E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // PA ::= TP T EX E V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // PA ::= TP T EX V E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // PA ::= TP E T V EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // PA ::= TP E T EX V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // PA ::= TP E V T EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // PA ::= TP E V EX T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // PA ::= TP E EX T V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // PA ::= TP E EX V T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // PA ::= TP V T E EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // PA ::= TP V T EX E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // PA ::= TP V E T EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // PA ::= TP V E EX T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // PA ::= TP V EX T E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // PA ::= TP V EX E T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // PA ::= TP EX T E V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // PA ::= TP EX T V E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // PA ::= TP EX E T V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // PA ::= TP EX E V T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // PA ::= TP EX V T E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // PA ::= TP EX V E T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // PA ::= E T TP V EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // PA ::= E T TP EX V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // PA ::= E T V TP EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // PA ::= E T V EX TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // PA ::= E T EX TP V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // PA ::= E T EX V TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // PA ::= E TP T V EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // PA ::= E TP T EX V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // PA ::= E TP V T EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // PA ::= E TP V EX T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // PA ::= E TP EX T V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // PA ::= E TP EX V T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // PA ::= E V T TP EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // PA ::= E V T EX TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // PA ::= E V TP T EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // PA ::= E V TP EX T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // PA ::= E V EX T TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // PA ::= E V EX TP T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // PA ::= E EX T TP V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // PA ::= E EX T V TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // PA ::= E EX TP T V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // PA ::= E EX TP V T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // PA ::= E EX V T TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // PA ::= E EX V TP T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // PA ::= V T TP E EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // PA ::= V T TP EX E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // PA ::= V T E TP EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // PA ::= V T E EX TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // PA ::= V T EX TP E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // PA ::= V T EX E TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // PA ::= V TP T E EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // PA ::= V TP T EX E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // PA ::= V TP E T EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // PA ::= V TP E EX T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 143: // PA ::= V TP EX T E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 144: // PA ::= V TP EX E T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 145: // PA ::= V E T TP EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 146: // PA ::= V E T EX TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 147: // PA ::= V E TP T EX 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 148: // PA ::= V E TP EX T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 149: // PA ::= V E EX T TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 150: // PA ::= V E EX TP T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 151: // PA ::= V EX T TP E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 152: // PA ::= V EX T E TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 153: // PA ::= V EX TP T E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 154: // PA ::= V EX TP E T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 155: // PA ::= V EX E T TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 156: // PA ::= V EX E TP T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 157: // PA ::= EX T TP E V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 158: // PA ::= EX T TP V E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 159: // PA ::= EX T E TP V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 160: // PA ::= EX T E V TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 161: // PA ::= EX T V TP E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 162: // PA ::= EX T V E TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 163: // PA ::= EX TP T E V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 164: // PA ::= EX TP T V E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 165: // PA ::= EX TP E T V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 166: // PA ::= EX TP E V T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 167: // PA ::= EX TP V T E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 168: // PA ::= EX TP V E T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 169: // PA ::= EX E T TP V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 170: // PA ::= EX E T V TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 171: // PA ::= EX E TP T V 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 172: // PA ::= EX E TP V T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 173: // PA ::= EX E V T TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 174: // PA ::= EX E V TP T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 175: // PA ::= EX V T TP E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 176: // PA ::= EX V T E TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 177: // PA ::= EX V TP T E 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 178: // PA ::= EX V TP E T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 179: // PA ::= EX V E T TP 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 180: // PA ::= EX V E TP T 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("PA",3, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 181: // TP ::= TIPO DOS_PUNTOS CANTIDAD PUNTO_COMA TOT 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("TP",14, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-4)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 182: // TP ::= TIPO DOS_PUNTOS PORCENTAJE PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("TP",14, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 183: // TOT ::= TOTAL DOS_PUNTOS N PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("TOT",15, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 184: // E ::= ETIQUETAS DOS_PUNTOS CORCHETE_ABIERTO C CORCHETE_CERRADO PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("E",16, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-5)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 185: // EX ::= EXTRA DOS_PUNTOS CADENA PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("EX",17, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-3)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 186: // V ::= VALORES DOS_PUNTOS CORCHETE_ABIERTO N CORCHETE_CERRADO PUNTO_COMA 
            {
              Object RESULT =null;

              CUP$DocCup$result = parser.getSymbolFactory().newSymbol("V",18, ((java_cup.runtime.Symbol)CUP$DocCup$stack.elementAt(CUP$DocCup$top-5)), ((java_cup.runtime.Symbol)CUP$DocCup$stack.peek()), RESULT);
            }
          return CUP$DocCup$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$DocCup$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$DocCup$do_action(
    int                        CUP$DocCup$act_num,
    java_cup.runtime.lr_parser CUP$DocCup$parser,
    java.util.Stack            CUP$DocCup$stack,
    int                        CUP$DocCup$top)
    throws java.lang.Exception
    {
              return CUP$DocCup$do_action_part00000000(
                               CUP$DocCup$act_num,
                               CUP$DocCup$parser,
                               CUP$DocCup$stack,
                               CUP$DocCup$top);
    }
}

}
